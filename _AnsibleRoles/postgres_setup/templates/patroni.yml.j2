{{ ansible_managed | comment }}

scope: {{ pg_patroni_scope }}
name: {{ ansible_hostname }}
 
restapi:
  listen: {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:8008
  connect_address: {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:8008
 
etcd:
  host: 127.0.0.1:2379
 
bootstrap:
  # this section will be written into Etcd:///config after initializing new cluster
  # and all other cluster members will use it as a `global configuration`
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        wal_level: 'hot_standby'
        hot_standby: "on"
        wal_keep_segments: 8
        max_replication_slots: 10
        wal_log_hints: "on"
        listen_addresses: '*'
        port: {{ pg_port }}
        logging_collector: 'on'
        log_truncate_on_rotation: 'on'
        log_filename: 'postgresql-%a.log'
        log_rotation_age: '1440'
        log_line_prefix: '%m - %l - %p - %h - %u@%d - %x'
        log_directory: 'pg_log'
        log_min_messages: 'WARNING'
        log_autovacuum_min_duration: '60s'
        log_min_error_statement: 'NOTICE'
        log_min_duration_statement: '30s'
        log_checkpoints: 'on'
        log_statement: 'ddl'
        log_lock_waits: 'on'
        log_temp_files: '0'
        log_timezone: 'Europe/Zurich'
        log_connections: 'on'
        log_disconnections: 'on'
        log_duration: 'on'
        client_min_messages: 'WARNING'
        wal_level: 'replica'
        hot_standby_feedback: 'on'
        max_wal_senders: '10'
        shared_buffers: '128MB'
        work_mem: '8MB'
        effective_cache_size: '512MB'
        maintenance_work_mem: '64MB'
        wal_compression: 'off'
        max_wal_senders: '20'
        shared_preload_libraries: 'pg_stat_statements'
        autovacuum_max_workers: '6'
        autovacuum_vacuum_scale_factor: '0.1'
        autovacuum_vacuum_threshold: '50'
        archive_mode: 'on'
        archive_command: '/bin/true'
        wal_log_hints: 'on'
#      recovery_conf:
#        restore_command: cp ../wal_archive/%f %p
 
  # some desired options for 'initdb'
  initdb:  # Note: It needs to be a list (some options need values, others are switches)
  - encoding: UTF8
  - data-checksums
 
  pg_hba:  # Add following lines to pg_hba.conf after running 'initdb'
  - host replication replicator {{ patroni0_ip }}/32 md5
  - host replication replicator {{ patroni1_ip }}/32 md5
  - host replication replicator {{ patroni2_ip }}/32 md5
  - host all all 172.22.56.0/23 md5
  - host all all 172.16.0.0/16 md5
  - host all all 10.0.0.0/8 md5
  - host all all {{ patroni0_ip }}/32 md5
  - host all all {{ patroni1_ip }}/32 md5
  - host all all {{ patroni2_ip }}/32 md5
 
  # Additional script to be launched after initial cluster creation (will be passed the connection URL as parameter)
# post_init: /usr/local/bin/setup_cluster.sh
 
  # Some additional users users which needs to be created after initializing new cluster
  users:
    {{ pg_user_admin }}:
      password: {{ pg_user_admin_password }}
      options:
        - superuser
    {{ pg_user_replicator }}:
      password: {{ pg_user_replicator_password }}
      options:
        - superuser
 
postgresql:
  listen: {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:5000
  connect_address: {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:5000
  data_dir: {{ patroni_data_dir }}
  bin_dir: {{ pg_bin_path }}
  config_dir: {{ patroni_data_dir }}
  pgpass: {{ pg_pass }}/.pgpass
  authentication:
    superuser:
      username: {{ pg_user_admin }}
      password: {{ pg_user_admin_password }}
    replication:
      username: {{ pg_user_replicator }}
      password: {{ pg_user_replicator_password }}
    superuser:
      username: {{ pg_lnx_user }}
      password: {{ pg_lnx_user_password }}
  parameters:
    unix_socket_directories: '/var/run/postgresql'
 
watchdog:
  mode: automatic # Allowed values: off, automatic, required
  device: /dev/watchdog
  safety_margin: 5
 
tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false

log:
  dir: {{ patroni_log_dir }}
  level: INFO
  file_num: 3